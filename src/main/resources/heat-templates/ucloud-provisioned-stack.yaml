heat_template_version: 2018-08-31

description:
  uCloud provisioned stack

parameters:
  flavor:
    type: string
    description: Flavor for the server to be created
    default: m1.small
    constraints:
      - custom_constraint: nova.flavor
  image:
    type: string
    description: Image ID or image name to use for the server
    constraints:
      - custom_constraint: glance.image
  network:
    type: string
    description: Network used by the server
  security_group:
    type: string
    description: Network security_group
  username:
    type: string
    default: ucloud
  pubKey:
    type: comma_delimited_list
  key_name:
    type: string
    description: Name of an existing key pair to use for the server
    constraints:
      - custom_constraint: nova.keypair
  volume_size:
    type: string
    description: Volume size of the system volume of the Virtual Server
    default: 10

resources:
  bootable_volume:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size }
      image: { get_param: image }

  server:
    type: OS::Nova::Server
    properties:
      flavor: { get_param: flavor }
      networks: [ { network: { get_param: network } } ]
      security_groups: [ get_param: security_group ]
      user_data: { get_resource: cloud-init-config }
      user_data_format: RAW
      key_name: { get_param: key_name }
      block_device_mapping:
        - device_name: vda
          volume_id: { get_resource: bootable_volume }
          delete_on_termination: true

  cloud-init-config:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        users:
          - name: { get_param: username}
            gecos: UCloud
            sudo: ALL=(ALL) NOPASSWD:ALL
            shell: /bin/bash
            ssh-authorized-keys: { get_param: pubKey }

outputs:
  server_ip:
    value: {get_attr: [ server, first_address ]}